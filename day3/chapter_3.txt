# 重点难点
1. 阶跃函数基于python::numpy的实现
2. 激活函数为何要使用非线性
3. tuple即使只有一个元素，仍然使用,结尾
4. 点乘和叉乘，以及点乘在使用上的方便性，对于神经网络的实现非常重要（否则运算的书写非常麻烦）

## 感知机和神经网络的区别和联系
> 感知机通过更复杂的组合，加上激活函数，进化成了神经网络

```
import numpy as np
def sigmoid(x)
    return 1/(1+np.exp(-x))
```
> 神经网络是更复杂和更具有适应性的决策机制

## 激活函数
> sigmoid/step function
- 从实现上，python的numpy有先天优势，可以处理数组
- 从更高维度（远处看），两者的变现是一致的，都是线性的行为
> ReLU
- 非线性的一种实现，神经网络的基石

## 矩阵及其点乘
- 注意点乘的被乘数矩阵和乘数矩阵的行和列的个数需要相等，否则无法运算
- 神经网络内积 == 矩阵的点乘

```
import numpy as np
x = np.array([1,2,3])
w = np.array([[2,3,4],[3,4,5]])
y = np.dot(x,w)
```